// <auto-generated />
using DVDManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DVDManagement.Migrations
{
    [DbContext(typeof(DVDMAGContext))]
    [Migration("20171217100759_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DVDManagement.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("DVDManagement.Models.Dvd_info", b =>
                {
                    b.Property<string>("movie_code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<DateTime>("create_date");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("overdue");

                    b.Property<int>("rent");

                    b.Property<byte>("time_limit");

                    b.Property<byte>("type");

                    b.Property<DateTime>("update_date");

                    b.HasKey("movie_code");

                    b.ToTable("Dvd_info");
                });

            modelBuilder.Entity("DVDManagement.Models.Dvd_recode", b =>
                {
                    b.Property<string>("movie_code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<byte>("type");

                    b.Property<string>("user_no")
                        .HasMaxLength(10);

                    b.HasKey("movie_code");

                    b.ToTable("Dvd_recode");
                });

            modelBuilder.Entity("DVDManagement.Models.Transaction", b =>
                {
                    b.Property<string>("user_no")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<int>("add_amount");

                    b.Property<string>("movie_code")
                        .HasMaxLength(10);

                    b.Property<DateTime>("trans_date");

                    b.Property<byte>("type");

                    b.HasKey("user_no");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("DVDManagement.Models.User", b =>
                {
                    b.Property<string>("user_no")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<byte>("birthday");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(254);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("phone_1")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("phone_2")
                        .HasMaxLength(10);

                    b.Property<bool>("sex");

                    b.Property<int>("store_amount");

                    b.HasKey("user_no");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
